@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<style>
    #search-box {
        padding: 10px;
        margin: 0px;
        font-size: 12px;
    }

    #search-name {
        border: none;
        padding: 6px;
        font-size: 16px;
        width: 80%;
        border-radius: 6px;
        background-color: lightgray;
    }

    #company-list {
        padding: 0px;
        margin: 0px;
        box-sizing: border-box;
        font-family: "Noto Sans KR", sans-serif;
        display: block; /*개행*/
    }

    .company-info {
        border-bottom: 1px solid rgb(245, 245, 245);
        cursor: pointer;
        padding: 10px;
    }

    .company-name {
        display: flex;
        -webkit-box-align: center;
        align-items: center;
    }

    .company-location {
        font-size: 12px;
        color: rgb(51, 51, 51);
    }

    .company-businessGroup {
        font-size: 12px;
        color: rgb(51, 51, 51);
    }
</style>

<section>
    <div style="width: 20%; height: 100%; float: left;">
        <div id="search-box">
            <input id="search-name" onkeyup="filterCompanies()" type="text" placeholder="회사명 입력" />
            <select id="search-businessGroup" onmouseup="filterCompanies()" plac>
                <option value="">산업군 선택</option>
            </select>
        </div>
        <div id="company-list" style="list-style: none"></div>
    </div>

    <div id="map" style="width: 80%; height: 100%; float: right; position: relative; overflow: hidden;"></div>
</section>

@*카카오 Map API를 이용한 map 기본 설정*@
<script type="text/javascript" src="//dapi.kakao.com/v2/maps/sdk.js?appkey=415ac1c77f0dfd57f3ddfbf328cd2e55&libraries=services,clusterer,drawing"></script>
<script>
    var mapContainer = document.getElementById('map'),
        mapOption = { // 서울~분당 보이는 적절한 시작 위치
            center: new kakao.maps.LatLng(37.5003, 127.084),
            level: 8
        };

    var map = new kakao.maps.Map(mapContainer, mapOption);

    var mapTypeControl = new kakao.maps.MapTypeControl();
    map.addControl(mapTypeControl, kakao.maps.ControlPosition.TOPRIGHT);

    var zoomControl = new kakao.maps.ZoomControl();
    map.addControl(zoomControl, kakao.maps.ControlPosition.RIGHT);

    // TODO : 데이터 가져와서 마커 찍기
</script>


@*Json 데이터 읽어와 기본 회사 데이터 세팅*@
<script src="./data/companies.json" type="text/javascript"></script>
<script>
    var json = JSON.parse(companies);

    const companyList = document.getElementById('company-list');
    const tempBusinessGroupList = new Array();

    for (i = 0; i < json.length; i++) {
        var companyInfoSection = document.createElement("section");
        companyInfoSection.className = 'company-info';
        companyInfoSection.tabIndex = "0";
        companyInfoSection.addEventListener("mouseup", drawCompanyOnMap);

        var companyNameDiv = document.createElement("div");
        companyNameDiv.className = 'company-name';
        companyNameDiv.innerHTML = json[i].name;
        companyInfoSection.appendChild(companyNameDiv);

        var companyLocationDiv = document.createElement("div");
        companyLocationDiv.className = 'company-location';
        companyLocationDiv.innerHTML = json[i].location;
        companyInfoSection.appendChild(companyLocationDiv);

        var companybusinesGroupDiv = document.createElement("div");
        companybusinesGroupDiv.className = 'company-businessGroup';
        companybusinesGroupDiv.innerHTML = json[i].businessGroup;
        companyInfoSection.appendChild(companybusinesGroupDiv);

        companyList.appendChild(companyInfoSection);

        tempBusinessGroupList.push(json[i].businessGroup);
    }

    var businessGroupList = document.getElementById('search-businessGroup');
    const set = new Set(tempBusinessGroupList.sort());

    for (let item of set) {
        var option = document.createElement('option');
        option.value = item;
        option.text = item;

        businessGroupList.add(option, null);
    }

    // 선택한 회사의 주소를 좌표로 변환 후 지도에 그려주는 함수
    function drawCompanyOnMap() {
        var location = this.querySelector('.company-location').textContent;
        var name = this.querySelector('.company-name').textContent;

        var geocoder = new kakao.maps.services.Geocoder();

        geocoder.addressSearch(location, function (result, status) {
            if (status === kakao.maps.services.Status.OK) {
                var coords = new kakao.maps.LatLng(result[0].y, result[0].x);

                this.map.setLevel(4);

                var marker = new kakao.maps.Marker({
                    map: this.map,
                    position: coords
                });

                // TODO : 하이퍼링크로 변경
                var infowindow = new kakao.maps.InfoWindow({
                    content: `<div style="width:150px;text-align:center;padding:6px 0;">${name}</div>`
                });

                infowindow.open(map, marker);

                map.setCenter(coords);
            }
        });
    }
</script>

@*검색 조건에 따라 회사 목록 필터링*@
<script type="text/javascript">
    function filterCompanies() {
        var companyList = document.getElementsByClassName('company-info');
        var searchName = document.getElementById('search-name').value.toUpperCase();
        var selectedBusinessGroup = document.getElementById('search-businessGroup').value;

        for (var i = 0; i < companyList.length; i++) {
            var name = companyList[i].getElementsByClassName('company-name');
            var businessGroup = companyList[i].getElementsByClassName('company-businessGroup');
            
            if (name[0].innerHTML.toUpperCase().indexOf(searchName) > -1) {
                if (selectedBusinessGroup && businessGroup[0].innerHTML !== selectedBusinessGroup) {
                    companyList[i].style.display = "none";
                } else {
                    companyList[i].style.display = "block";
                }
            } else {
                companyList[i].style.display = "none";
            }
        }
    }
</script>